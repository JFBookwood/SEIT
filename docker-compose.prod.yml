version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://backend:8000/api
    depends_on:
      - backend
    volumes:
      - ./nginx.prod.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://seit_user:${POSTGRES_PASSWORD}@postgres:5432/seit_db
      - SECRET_KEY=${SECRET_KEY}
      - NASA_EARTHDATA_TOKEN=${NASA_EARTHDATA_TOKEN}
      - EARTHDATA_USERNAME=${EARTHDATA_USERNAME}
      - EARTHDATA_PASSWORD=${EARTHDATA_PASSWORD}
      - PURPLEAIR_API_KEY=${PURPLEAIR_API_KEY}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - OPENAQ_API_KEY=${OPENAQ_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - CACHE_DIR=/app/cache
      - LOG_FILE=/app/logs/application.log
      - ENVIRONMENT=production
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000}
    volumes:
      - seit_cache:/app/cache
      - seit_logs:/app/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: seit_db
      POSTGRES_USER: seit_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U seit_user -d seit_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Background job worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    command: celery -A api.tasks worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://seit_user:${POSTGRES_PASSWORD}@postgres:5432/seit_db
      - REDIS_URL=redis://redis:6379/0
      - NASA_EARTHDATA_TOKEN=${NASA_EARTHDATA_TOKEN}
      - PURPLEAIR_API_KEY=${PURPLEAIR_API_KEY}
      - CACHE_DIR=/app/cache
    volumes:
      - seit_cache:/app/cache
      - seit_logs:/app/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Scheduler for background tasks
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.backend
    command: celery -A api.tasks beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://seit_user:${POSTGRES_PASSWORD}@postgres:5432/seit_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  seit_cache:
    driver: local
  seit_logs:
    driver: local

networks:
  default:
    name: seit_production
    driver: bridge
